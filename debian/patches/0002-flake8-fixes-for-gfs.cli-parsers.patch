From: Caleb <yocalebo@gmail.com>
Date: Sat, 4 Apr 2020 12:12:52 -0400
Subject: flake8 fixes for gfs.cli parsers

---
 gfs/cli/parsers.py | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/gfs/cli/parsers.py b/gfs/cli/parsers.py
index 3d18c3d..fa0dac4 100644
--- a/gfs/cli/parsers.py
+++ b/gfs/cli/parsers.py
@@ -63,8 +63,7 @@ def parse_volume_info(info):
 
 
 def _parse_a_node(node_el):
-    brick_path = (node_el.find('hostname').text + ":" +
-                  node_el.find('path').text)
+    brick_path = (node_el.find('hostname').text + ":" + node_el.find('path').text)
     value = {
         'name': brick_path,
         'uuid': node_el.find('peerid').text,
@@ -78,7 +77,7 @@ def _parse_a_node(node_el):
         'fs_name': node_el.find('fsName').text,
     }
 
-    # ISSUE #14 glusterfs 3.6.5 does not have 'ports' key 
+    # ISSUE #14 glusterfs 3.6.5 does not have 'ports' key
     # in vol status detail xml output
     if node_el.find('ports'):
         value['ports'] = {
@@ -86,12 +85,11 @@ def _parse_a_node(node_el):
             "rdma": node_el.find('ports').find("rdma").text
         }
     else:
-        value['ports'] = { 
-            "tcp": node_el.find('port') ,
+        value['ports'] = {
+            "tcp": node_el.find('port'),
             "rdma": None
         }
 
-
     return value
 
 
@@ -402,6 +400,7 @@ def parse_tier_detach(data):
 def parse_tier_status(data):
     raise NotImplementedError("Tier Status")
 
+
 def parse_volume_list(data):
     xml = etree.fromstring(data)
     volumes = []
@@ -409,6 +408,7 @@ def parse_volume_list(data):
         volumes.append(el.text)
     return volumes
 
+
 def parse_heal_info(data):
     xml = etree.fromstring(data)
     healinfo = []
@@ -422,7 +422,6 @@ def parse_heal_info(data):
     return healinfo
 
 
-
 def parse_heal_statistics(data):
     raise NotImplementedError("Heal Statistics")
 
@@ -439,9 +438,10 @@ def parse_snapshot_list(data):
     xml = etree.fromstring(data)
     snapshots = []
     for el in xml.findall('snapList/snapshot'):
-      snapshots.append(el.text)
+        snapshots.append(el.text)
     return snapshots
 
+
 def _parse_a_peer(peer):
     value = {
         'uuid': peer.find('uuid').text,
